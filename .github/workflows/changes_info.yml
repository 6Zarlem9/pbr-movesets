name: changes_info
on: [ pull_request ]

jobs:
  changes_info:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - run: sudo apt-get install libyaml-dev
      - name: install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
      - id: files
        uses: jitterbit/get-changed-files@v1
      - run: |
          echo -e "Stats:\n" > _sets_comments.md
          echo "| file | set | hp | atk | def | spe | spA | spD |" >> _sets_comments.md
          echo "| --- | --- | --- | --- | --- | --- | --- | --- |" >> _sets_comments.md
          any_changed=false
          for changed_file in ${{ steps.files.outputs.added_modified }}; do
            file_count=$(find pokesets/ -name "$changed_file" | wc -l)
            if [[ $changed_file == pokesets/* && ( $changed_file == *.yaml || $changed_file == *.yml ) ]]; then
              echo "$changed_file is a pokeset"
              any_changed=true
              python -m pokecat populate "${changed_file}" "${changed_file}.populated"
              python -m pokecat instantiate "${changed_file}.populated" "${changed_file}.instantiated"
              cat "${changed_file}.instantiated" | jq --raw-output ".[] | \"| `${changed_file}` | \(.setname) | \(.stats.hp) | \(.stats.atk) | \(.stats.def) | \(.stats.spe) | \(.stats.spA) | \(.stats.spD) |\"" >> _sets_comments.md
              cat _sets_comments.md
            else
              echo "$changed_file is not a pokeset"
            fi
          done
          if [ "$any_changed" = false ]; then
            echo "No sets changed"
            rm _sets_comments.md
          fi
      - name: 'Add info comment'
        uses: actions/github-script@0.3.0
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
            fs = require('fs');
            if (fs.existsSync('_sets_comments.md')) {
              fs.readFile('_sets_comments.md', 'utf8', function(err, data) {
                if (err) return console.log(err);
                github.issues.createComment({ issue_number, owner, repo, body: data });
              });
            }
